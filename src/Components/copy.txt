import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { faPlus } from "@fortawesome/free-solid-svg-icons";
import { useEffect, useState } from "react";
import { doc, addDoc, collection, onSnapshot, getDocs } from "firebase/firestore";
import { firestore } from "../../firebase/clientApp";
import { useAuthState } from 'react-firebase-hooks/auth';
import { auth } from "../../firebase/clientApp";
import { ToastContainer, toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import NavBar from '../Components/navbar';

const Home = () => {
  const [quote, setQuote] = useState<any>('');
  const [showAddForm, setShowAddForm] = useState<boolean>(false);
  const [device, setDevice] = useState('');
  const [goodDevice, setGoodDevice] = useState<any>();
  const [badDevice, setBadDevice] = useState<any>();
  const [totalDevice, setTotalDevice] = useState<any>();
  const [user, loading, error] = useAuthState(auth);
  const [docId, setDocId] = useState<string>('');

  useEffect(() => {
    const getQuotes = async ()  => {
      const response = await fetch("https://type.fit/api/quotes");
      const data = await response.json();
      const change = () => {
        const quoting = data[Math.floor(Math.random() * data.length)];
        setQuote(quoting);
      };
      change();
      setInterval(change, 50000);
    };
    getQuotes();
  }, []);

  const sendToDatabase = async () => {
    if (device === '' || goodDevice === 0 || badDevice === 0) {
      return toast.error("Don't leave any field empty", {
        position: "top-center",
        autoClose: 5000,
        hideProgressBar: false,
        closeOnClick: true,
        pauseOnHover: true,
        draggable: true,
        progress: undefined,
        theme: "dark",
      });
    } else {
      const totalWork = goodDevice + badDevice;
      setTotalDevice(totalWork);
      if (user) {
        await addDoc(collection(firestore, "users", `${user.uid}`, 'tasks'), {
          device_type: device,
          good_device: goodDevice,
          bad_device: badDevice,
          total_device_repair: totalDevice,
          date_doc_add: Date.now().toString()
        });
      }
      return toast.success("Work added successfully", {
        position: "top-center",
        autoClose: 5000,
        hideProgressBar: false,
        closeOnClick: true,
        pauseOnHover: true,
        draggable: true,
        progress: undefined,
        theme: "dark",
      });
    }
  };

  useEffect(() => {
    const getTableData = async () =>{
      const querySnapshot = await getDocs(collection(firestore, "users", `${user?.uid}`, 'tasks' ));
      querySnapshot.forEach((doc) => {
        setDocId(doc.id)
      });
      if(docId){
        const unsub = onSnapshot(doc(firestore, "users", `${user?.uid}`, 'tasks', `${docId}`), (doc) => {
          console.log("Current data: ", doc.data());
        });
        return unsub;
      }
    }
    getTableData();
  }, [docId, user]);

  const showModal = () => {
    setShowAddForm(!showAddForm);
  };
const FormGroup = (
  <>
  
<div className={showAddForm ? " absolute flex justify-center items-center w-full h-screen" : " hidden " } style={{
  backgroundColor: 'rgba(0, 0, 0, 0.178)'
}} >

  <div className="bg-white rounded w-5/12 h-96 flex flex-col items-center justify-center">

  <h1 className="mb-4 text-3xl font-medium text-red-500" >Add new work</h1>

<div className="w-full flex justify-center">
 <form className="h-60 w-11/12 grid grid-cols-2 place-items-center h-10 px-2 rounded ">
   <select 
    required
    onChange={e => { setDevice(e.currentTarget.value); }}
    className="w-10/12 h-10 px-2 rounded border outline-none"
   >
            <option value="Android">Android</option>
            <option value="Windows">Windows</option>
          
        </select>

  <input type="number" 
  required
  onChange={e => { setGoodDevice(e.currentTarget.value); }}
  className="w-10/12 h-10 px-2 rounded border outline-none"
  placeholder="Good devices"
  />

  <input type="number" 
  required
  onChange={e => { setBadDevice(e.currentTarget.value); }}
  className="w-11/12 col-span-2  h-10 px-2 rounded border outline-none"
  placeholder="Bad devices"
  />

</form>
</div>
{/* button group */}
<div className="w-full pr-5 flex justify-end gap-10">

<button className="p-1 border rounded w-32" onClick={showModal}>cancle</button>

<button className="p-1 border rounded bg-red-500 hover:bg-red-400 text-white w-32" onClick={sendToDatabase}>Add</button>

</div>
  </div>


</div>
  
  
  </>
)
  
  return (
   <>
   <div className="relative">
 <ToastContainer
position="top-center"
autoClose={5000}
hideProgressBar={false}
newestOnTop={false}
closeOnClick
rtl={false}
pauseOnFocusLoss
draggable
pauseOnHover
theme="dark"
/>
   { FormGroup}
    <div>
<NavBar />
    </div>
<div className='w-full flex h-screen mt-12 '>


    <div className='bg-white w-14 hidden line-bar px-2 fixed top-12 h-screen'>left</div>
{/* the main section for the content */}
    <div className=' over-flow-scroll w-full px-5 ml-14 py-3'>
{/* first components which is the welcome message and action button */}
        <div className='w-full flex justify-between mt-20 p-2 '>
    <h2 className='text-4xl font-bold'>Welcome, Chidera</h2>
    {/* Add button */}
    <button className='bg-red-500 p-1 text-white px-2 flex items-center gap-3 rounded hover:bg-red-400' onClick={showModal}>
      <span>
      <FontAwesomeIcon
        icon={faPlus}
        style={{ fontSize: 20, color: "white" }}
      />
      </span>
        Add New Work
    </button>

        </div>

        {/* seconf section whic display the total work, total bad, and total goods with some random wise quates */}
        <div className=' w-full  flex items-center justify-center mt-20'>
            <div className='w-10/12 flex gap-10 '>

            <div className='bg-white flex justify-between w-7/12 rounded h-32 overflow-hidden'>
                {/* count display box */}
                <div className='w-52 flex flex-col gap-2 p-5 items-center'>
                    <p>Total Good</p>
                    <h1 className='text-3xl font-bold'>4,467</h1>
                </div>
                {/* //////////// */}
                {/* count display box */}
                <div className='w-52 flex flex-col gap-2 p-5 items-center'>
                    <p>Total Bad</p>
                    <h1 className='text-3xl font-bold'>1,467</h1>
                </div>
                {/* //////////// */}
                {/* count display box */}
                <div className='w-52 flex flex-col gap-2 p-5 items-center'>
                    <p>Total Repaired</p>
                    <h1 className='text-3xl font-bold'>13,467</h1>
                </div>
                {/* //////////// */}
            </div>

            <div className=' w-5/12 p-2'>
                <p className='text-3xl'>
                {quote == '' ? 'Quotes loading...' : `"${quote?.text}"`}
              
                </p>
               <p className="text-lg mt-3">{quote?.author}</p>
            </div>

            </div>

        </div>

 {/*///////// third section which will contain the table 
            that display the list of done added task,
            each row should have type of device, number of the bad and 
            the good ones,total and and current date.///////*/}
<div className='w-full flex justify-center  mt-28'>

<div className='w-10/12'>
<table className="table-auto w-full px-4 ">
  <thead>
    <tr className='h-12 '>
      <th className='w-20'>S/N</th>
      <th className='text-start'>Device type</th>
      <th className='text-start'>Good Ones</th>
      <th className='text-start'>Bad Ones</th>
      <th className='text-start'>Total Repair</th>
      <th className='text-start'>Date</th>

    </tr>
  </thead>
  <tbody className=' w-full body'>
    
    <tr className='h-12 '>
    <th>1</th>
      <td className='text-start'>Android</td>
      <td className='text-start'>10</td>
      <td className='text-start'>16</td>
      <td className='text-start'>26</td>
      <td className='text-start'>12/05/2021</td>
    </tr>
   

    <tr className='h-12 '>
    <th>2</th>
      <td className='text-start'>Window</td>
      <td className='text-start'>25</td>
      <td className='text-start'>5</td>
      <td className='text-start'>30</td>
      <td className='text-start'>13/05/2021</td>
    </tr>
   
  </tbody>
</table>
</div>

</div>

    </div>
</div>

   </div>
   </>
  )
}

export default Home


if(data){
  data raedy
}else{
  if(!data){
    loading
  }else{
    add data
  }
}